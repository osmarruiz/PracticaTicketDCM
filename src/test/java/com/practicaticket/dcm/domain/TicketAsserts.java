package com.practicaticket.dcm.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TicketAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTicketAllPropertiesEquals(Ticket expected, Ticket actual) {
        assertTicketAutoGeneratedPropertiesEquals(expected, actual);
        assertTicketAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTicketAllUpdatablePropertiesEquals(Ticket expected, Ticket actual) {
        assertTicketUpdatableFieldsEquals(expected, actual);
        assertTicketUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTicketAutoGeneratedPropertiesEquals(Ticket expected, Ticket actual) {
        assertThat(actual)
            .as("Verify Ticket auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTicketUpdatableFieldsEquals(Ticket expected, Ticket actual) {
        assertThat(actual)
            .as("Verify Ticket relevant properties")
            .satisfies(a -> assertThat(a.getTitle()).as("check title").isEqualTo(expected.getTitle()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getStatus()).as("check status").isEqualTo(expected.getStatus()))
            .satisfies(a -> assertThat(a.getCreatedDate()).as("check createdDate").isEqualTo(expected.getCreatedDate()))
            .satisfies(a -> assertThat(a.getUpdatedDate()).as("check updatedDate").isEqualTo(expected.getUpdatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTicketUpdatableRelationshipsEquals(Ticket expected, Ticket actual) {
        assertThat(actual)
            .as("Verify Ticket relationships")
            .satisfies(a -> assertThat(a.getCategory()).as("check category").isEqualTo(expected.getCategory()));
    }
}
